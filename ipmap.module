<?php
// $Id$
/**
 * ipmap module providing ip to label mapping interface and resolution
 * @author Ryan Eby
 * @author Eric Klooster
 */

/**
 * Display help and module information
 *
 * @param string $path Which path of the site we're displaying help
 * @param array $arg Array that holds the current path as would be returned from arg() function
 * @return string help text for the path
 */
function ipmap_help($path, $arg) {
  $output = '';
  switch ($path) {
    case "admin/help#ipmap":
      $output = '<p>'.  t("ip to label mapping interface and resolution") .'</p>';
      break;
  }
  return $output;
}
 
/**
 * Valid permissions for this module
 *
 * @return array An array of valid permissions for the sopac module
 */
function ipmap_perm() {
  return array('administer ipmap');
}

function ipmap_menu() {
  $items['admin/settings/ipmap'] = array(
    'title' => t('ipmap Settings'),
    'description' => 'Settings for IP Map',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ipmap_settings'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
  );
  
  return $items;
}

function ipmap_settings() {
  $form['ipmap_ranges'] = array(
    '#type' => 'textfield',
    '#title' => t("IP Map Ranges"),
    '#default_value' => variable_get('ipmap_ranges', NULL),
    '#size' => 64,
    '#maxlength' => 256,
    '#description' => t("IP Ranges and their assigned labels in the format [IP RANGE]:[Label],[IP RANGE]:[Label], etc."),
  );
  return system_settings_form($form);
}

function ipmap_labels() {
  require_once('ip_in_range.php'); // someone already did all the hard work
  $ip = $_SERVER['REMOTE_ADDR']; //don't care about proxies right now
  $labels = array();
  
  if ($ipmap_ranges = variable_get('ipmap_ranges', NULL)) {
    $rangepairs = explode(',', $ipmap_ranges);
    
    foreach ($rangepairs as $rangepair) {
      $rangepair = explode(':', $rangepair); // e.g. "IP Range:Label"
      $range = $rangepair[0];
      $label = $rangepair[1];
      
      if (ip_in_range($ip, $range)) {
        $labels[] = $label;
      }
    }
  }
  
  if (empty($labels)) {
    $labels[] = "external"; // right now we label everything else external. may add geolocation later
  }

  return $labels;
}